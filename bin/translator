#!/usr/bin/env ruby

require_relative '../lib/parser'
require_relative '../lib/code_writer'

options = [].tap do |options|
  options << ARGV.shift while ARGV.first.start_with?('--')
end

code_writer = CodeWriter.new(STDOUT)

if options.include? '--init'
  code_writer.write_init
end

ARGV.each do |filename|
  basename = File.basename(filename, ".vm")
  code_writer.set_file_name(basename)

  input = File.read(filename)
  parser = Parser.new(input)

  while parser.has_more_commands?
    parser.advance

    case parser.command_type
    when Parser::C_ARITHMETIC
      code_writer.write_arithmetic(parser.arg1)
    when Parser::C_PUSH, Parser::C_POP
      code_writer.write_push_pop(
        parser.command_type,
        parser.arg1,
        parser.arg2
      )
    when Parser::C_LABEL
      code_writer.write_label(parser.arg1)
    when Parser::C_GOTO
      code_writer.write_goto(parser.arg1)
    when Parser::C_IF
      code_writer.write_if(parser.arg1)
    when Parser::C_FUNCTION
      code_writer.write_function(parser.arg1, parser.arg2)
    when Parser::C_CALL
      code_writer.write_call(parser.arg1, parser.arg2)
    when Parser::C_RETURN
      code_writer.write_return
    end
  end
end
